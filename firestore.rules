rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is the creator
    function isCreator(creatorId) {
      return isAuthenticated() && (
        creatorId == request.auth.uid || 
        creatorId == string(request.auth.uid)
      );
    }
    
    // Exception for invitations - allow public read access
    match /invitations/{invitationId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null;
    }
    
    // Allow reading published memorials or if user is creator
    match /memorials/{memorialId} {
      allow read: if resource.data.status == 'published' || 
                    isAuthenticated() && (
                      isCreator(resource.data.creatorId) ||
                      request.auth.uid in (resource.data.collaboratorIds || []) ||
                      exists(/databases/$(database)/documents/universities/$(resource.data.universityId)/users/$(request.auth.uid))
                    );
      allow write: if isAuthenticated();
    }
    
    // Default rule - require authentication for all operations
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
  }
} 